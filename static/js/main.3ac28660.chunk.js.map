{"version":3,"sources":["components/Header/index.js","config/axios.js","api-calls/index.js","actions/products-actions.js","types/index.js","components/Product/index.js","components/Products/index.js","actions/alert-actions.js","components/NewProduct/index.js","components/EditProduct/index.js","reducers/products-reducer.js","reducers/alert-reducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","axiosClient","axios","create","baseURL","addProductDB","product","a","async","post","deleteProductDB","id","delete","editProductDB","put","addProductOk","type","payload","retrieveProductDelete","editProductOk","Product","name","price","dispatch","useDispatch","history","useHistory","confirmDeleteProduct","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","deleteProductAction","onClick","retrieveProductAction","retrieveProductEdit","push","redirectionEdition","Products","useEffect","get","data","products","useSelector","state","error","loading","length","map","key","showAlert","alert","createAlert","Newproduct","useState","setName","setPrice","addProduct","createNewProductAction","onSubmit","event","preventDefault","trim","msg","placeholder","onChange","target","min","Number","EditProduct","setProduct","productEdit","editProduct","onChangeForm","editProductAction","initialState","deleteProduct","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","NewProduct","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ac28660.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './index.css'\n\nconst Header = () => {\n  return (\n    <nav className='header'>\n      <div>\n        <h1 className='header__title'>Juice store</h1>\n      </div>\n      <button className='button button--new'>\n        <Link to={'/products/new'}>Add product</Link>\n      </button>\n    </nav>\n  )\n}\n\nexport default Header","import axios from 'axios'\n\nconst axiosClient = axios.create({\n  baseURL: 'http://localhost:4000/'\n})\n\nexport default axiosClient\n","import axiosClient from '../config/axios'\n\nexport async function retrieveProductsDB() {\n  return await axiosClient.get('/products')\n}\n\nexport async function addProductDB(product) {\n  return await axiosClient.post('/products', product)\n}\n\nexport async function deleteProductDB(id) {\n  return await axiosClient.delete(`/products/${id}`)\n}\n\nexport async function editProductDB(product) {\n  return await axiosClient.put(`/products/${product.id}`, product)\n}\n","import {\n  ADD_PRODUCT,\n  ADD_PRODUCT_OK,\n  ADD_PRODUCT_ERROR,\n  BEGIN_PRODUCTS_DOWNLOAD,\n  PRODUCTS_DOWNLOAD_OK,\n  PRODUCTS_DOWNLOAD_ERROR,\n  RETRIEVE_PRODUCT_DELETE,\n  PRODUCT_DELETED_OK,\n  PRODUCT_DELETED_ERROR,\n  RETRIEVE_PRODUCT_EDIT,\n  BEGIN_EDIT_PRODUCT,\n  PRODUCT_EDITED_OK,\n  PRODUCT_EDITED_ERROR\n} from '../types'\nimport Swal from 'sweetalert2'\nimport {\n  retrieveProductsDB,\n  addProductDB,\n  deleteProductDB,\n  editProductDB\n} from '../api-calls'\n\n\n// Download products actions\nconst downloadProducts = () => ({\n  type: BEGIN_PRODUCTS_DOWNLOAD,\n  payload: true\n})\n\nconst downloadProductsOk = products => ({\n  type: PRODUCTS_DOWNLOAD_OK,\n  payload: products\n})\n\nconst downloadProductsError = () => ({\n  type: PRODUCTS_DOWNLOAD_ERROR,\n  payload: true\n})\n\nexport function retrieveProductsAction() {\n  return async (dispatch) => {\n    dispatch(downloadProducts())\n    try {\n      const {data} = await retrieveProductsDB()\n      dispatch(downloadProductsOk(data))\n    } catch(error) {\n      dispatch(downloadProductsError())\n    }\n  }\n}\n\n\n// Create new products\nconst addProduct = () => ({\n  type: ADD_PRODUCT,\n  payload: true\n})\n\nconst addProductOk = product => ({\n  type: ADD_PRODUCT_OK,\n  payload: product\n})\n\nconst addProductError = state => ({\n  type: ADD_PRODUCT_ERROR,\n  payload: state\n})\n\nexport function createNewProductAction(product) {\n  return async (dispatch) => {\n    dispatch(addProduct())\n    try {\n      await addProductDB(product)\n      dispatch(addProductOk(product))\n      // Alert\n      Swal.fire({\n        title: 'Added!',\n        text: 'The product has been added successfully',\n        icon: 'success',\n        confirmButtonColor: '#62a086'\n      })\n    } catch (error) {\n      dispatch(addProductError(true))\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'An error ocurred. Please, try it again.'\n      })\n    }\n  }\n}\n\n\n// Delete products\nconst retrieveProductDelete = id => ({\n  type: RETRIEVE_PRODUCT_DELETE,\n  payload: id\n})\n\nconst deleteProductOk = () => ({\n  type: PRODUCT_DELETED_OK\n})\n\nconst deleteProductError = () => ({\n  type: PRODUCT_DELETED_ERROR,\n  payload: true\n})\n\nexport function deleteProductAction(id) {\n  return async (dispatch) => {\n    dispatch(retrieveProductDelete(id))\n    try {\n      await deleteProductDB(id)\n      dispatch(deleteProductOk())\n      // Alert\n       Swal.fire({\n        title: 'Deleted!',\n        text: 'The product has been deleted.',\n        icon: 'success',\n        confirmButtonColor: '#62a086'\n      })\n    } catch(error) {\n      dispatch(deleteProductError())\n    }\n  }\n}\n\n\n// Edit product\nconst retrieveProductAction = product => ({\n  type: RETRIEVE_PRODUCT_EDIT,\n  payload: product\n})\n\nexport function retrieveProductEdit(product) {\n  return (dispatch) => {\n    dispatch(retrieveProductAction(product))\n  }\n}\n\nconst editProduct = () => ({\n  type: BEGIN_EDIT_PRODUCT\n})\n\nconst editProductOk = product => ({\n  type: PRODUCT_EDITED_OK,\n  payload: product\n})\n\nconst editProductError = () => ({\n  type: PRODUCT_EDITED_ERROR,\n  payload: true\n})\n\nexport function editProductAction(product) {\n  return async (dispatch) => {\n    dispatch(editProduct(product))\n    try {\n      await editProductDB(product)\n      dispatch(editProductOk(product))\n      // Alert\n      Swal.fire({\n        title: 'Updated!',\n        text: 'The product has been updated.',\n        icon: 'success',\n        confirmButtonColor: '#62a086'\n      })\n    } catch (error) {\n      dispatch(editProductError())\n    }\n  }\n}\n","export const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const ADD_PRODUCT_OK = 'ADD_PRODUCT_OK'\nexport const ADD_PRODUCT_ERROR = 'ADD_PRODUCT_ERROR'\n\nexport const BEGIN_PRODUCTS_DOWNLOAD = 'BEGIN_PRODUCTS_DOWNLOAD'\nexport const PRODUCTS_DOWNLOAD_OK = 'PRODUCTS_DOWNLOAD_OK'\nexport const PRODUCTS_DOWNLOAD_ERROR = 'PRODUCTS_DOWNLOAD_ERROR'\n\nexport const RETRIEVE_PRODUCT_DELETE = 'RETRIEVE_PRODUCT_DELETE'\nexport const PRODUCT_DELETED_OK = 'PRODUCT_DELETED_OK'\nexport const PRODUCT_DELETED_ERROR = 'PRODUCT_DELETED_ERROR'\n\nexport const RETRIEVE_PRODUCT_EDIT= 'RETRIEVE_PRODUCT_EDITED'\nexport const BEGIN_EDIT_PRODUCT = 'BEGIN_EDIT_PRODUCT'\nexport const PRODUCT_EDITED_OK = 'PRODUCT_EDITED_OK'\nexport const PRODUCT_EDITED_ERROR = 'PRODUCT_EDITED_ERROR'\n\nexport const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport { useDispatch } from 'react-redux'\nimport { deleteProductAction, retrieveProductEdit } from '../../actions/products-actions'\nimport './index.css'\n\nconst Product = (product) => {\n  const { name, price, id } = product\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const confirmDeleteProduct = id => {\n    // ask the user for confirmation\n    Swal.fire({\n      title: 'Are you sure you want to delete the product?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#62a086',\n      cancelButtonColor: '#f66b61',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if(result.value) {\n        dispatch(deleteProductAction(id))\n      }\n    })\n  }\n\n  // función que redirige de forma programada, es mejor que Link\n  const redirectionEdition = product => {\n    dispatch(retrieveProductEdit(product))\n    history.push(`products/edit/${id}`)\n  }\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td className='prices'>{price} $</td>\n      <td className='button-container'>\n        <button\n          className='button button--edit'\n          type='button'\n          onClick={() => redirectionEdition(product)}\n        >Edit</button>\n        <button\n          className='button button--delete'\n          type='button'\n          onClick={() => confirmDeleteProduct(id)}\n        >Delete</button>\n      </td>\n    </tr>\n  )\n}\n\nexport default Product\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { retrieveProductsAction } from '../../actions/products-actions'\nimport Product from '../Product'\nimport './index.css'\n\nconst Products = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    (async () => {\n      await dispatch(retrieveProductsAction())\n    })()\n  }, [])\n\n  let products = useSelector(state => state.products.products)\n  const error = useSelector(state => state.products.error)\n  const loading = useSelector(state => state.products.loading)\n\n  return (\n    <div>\n      <h2 className='table__title'>Products</h2>\n      { error ? <p>An error ocurred</p> : null }\n      { loading ? <p>Loading...</p> : null }\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th id='table__title-price'>Price</th>\n            <th id='table__title-action'>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          { products.length === 0 ? 'No products yet.' : (\n            products.map(product =>\n              <Product\n                key={product.id}\n                name={product.name}\n                price={product.price}\n                id={product.id}\n              />\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Products\n","import {\n  SHOW_ALERT,\n  HIDE_ALERT\n} from '../types'\n\n// Show alert\nconst createAlert = alert => ({\n  type: SHOW_ALERT,\n  payload: alert\n})\n\nexport function showAlert(alert) {\n  return (dispatch) => {\n    dispatch(createAlert(alert))\n  }\n}\n\n// Hide alert\nconst hideAlert = () => ({\n  type: HIDE_ALERT,\n  payload: null\n})\n\nexport function hideAlertAction() {\n  return (dispatch) => {\n    dispatch(hideAlert())\n  }\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createNewProductAction } from '../../actions/products-actions'\nimport { showAlert, hideAlertAction } from '../../actions/alert-actions'\nimport './index.css'\n\nconst Newproduct = ({ history }) => {\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n\n  const dispatch = useDispatch()\n\n  // access the store state\n  const loading = useSelector(state => state.products.loading) // true o false\n  const error = useSelector(state => state.products.error) // true o false\n  const alert = useSelector(state => state.alert.alert)\n\n  // se utiliza dispatch para ejecutar las acciones\n  const addProduct = product => dispatch(createNewProductAction(product))\n\n  const submitNewProduct = async event => {\n    event.preventDefault()\n    // validate form\n    if(name.trim() === '' || price <= 0) {\n      const alert = {\n        msg: 'All fields are required.'\n      }\n      dispatch(showAlert(alert))\n      return\n    }\n    // if no errors\n    dispatch(hideAlertAction())\n    // create new product\n    await addProduct({\n      name,\n      price\n    })\n    // redirect to main component\n    history.push('/')\n  }\n\n  const goBack = () => {\n    history.push('/')\n  }\n\n  return (\n    <div>\n      <h2 className='table__title'>New product</h2>\n      <form\n        className='form'\n        onSubmit={submitNewProduct} >\n        <section className='form__section'>\n          <label>Product name</label>\n          <input\n            type='text'\n            placeholder='Product name'\n            name='name'\n            value={name}\n            onChange={event => setName(event.target.value)}\n          />\n        </section>\n        <section className='form__section'>\n          <label>Product price</label>\n          <input\n            type='number'\n            name='price'\n            min='0'\n            value={price}\n            onChange={event => setPrice(Number(event.target.value))}\n          />\n        </section>\n        <div className='button__container'>\n          <button\n            type='button'\n            className='button button--cancel'\n            onClick={goBack}\n           >Cancel</button>\n          <button className='button button--confirm'>Confirm</button>\n        </div>\n        { alert ? <p className='alert-message'>{alert.msg}</p> : null }\n      </form>\n      { loading ? <p>Loading...</p> : null }\n      { error ? <p>Ups! An error ocurred.</p> : null }\n    </div>\n  )\n}\n\nexport default Newproduct","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editProductAction } from '../../actions/products-actions'\nimport { useHistory } from 'react-router-dom'\nimport './index.css'\n\nconst EditProduct = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [product, setProduct] = useState({\n    name: '',\n    price: ''\n  })\n\n  const productEdit = useSelector(state => state.products.editProduct)\n\n  // fill state\n  useEffect(() => {\n    setProduct(productEdit)\n  }, [productEdit])\n\n\n  const submitEditProduct = event => {\n    event.preventDefault()\n    dispatch(editProductAction(product))\n    history.push('/')\n  }\n\n  // read data from form\n  const onChangeForm = event => {\n    setProduct({\n      ...product,\n      [event.target.name] : event.target.value\n    })\n  }\n\n  const goBack = () => {\n    history.push('/')\n  }\n\n  return (\n    <div>\n       <h2 className='table__title'>Edit product</h2>\n      <form\n        className='form'\n        onSubmit={submitEditProduct}\n      >\n        <section className='form__section'>\n          <label>Product name</label>\n          <input\n            type='text'\n            name='name'\n            value={product.name}\n            onChange={onChangeForm}\n          />\n        </section>\n        <section className='form__section'>\n          <label>Product price</label>\n          <input\n            type='number'\n            name='price'\n            min='0'\n            value={product.price}\n            onChange={onChangeForm}\n          />\n        </section>\n        <div className='button__container'>\n          <button\n            type='button'\n            className='button button--cancel'\n            onClick={goBack}\n           >Cancel</button>\n          <button className='button button--confirm'>Confirm</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default EditProduct","import {\n  ADD_PRODUCT,\n  ADD_PRODUCT_OK,\n  ADD_PRODUCT_ERROR,\n  BEGIN_PRODUCTS_DOWNLOAD,\n  PRODUCTS_DOWNLOAD_OK,\n  PRODUCTS_DOWNLOAD_ERROR,\n  RETRIEVE_PRODUCT_DELETE,\n  PRODUCT_DELETED_OK,\n  PRODUCT_DELETED_ERROR,\n  RETRIEVE_PRODUCT_EDIT,\n  BEGIN_EDIT_PRODUCT,\n  PRODUCT_EDITED_OK,\n  PRODUCT_EDITED_ERROR\n} from '../types'\n\nconst initialState = {\n  products: [],\n  error: false,\n  loading: false,\n  deleteProduct: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n\n    case BEGIN_PRODUCTS_DOWNLOAD:\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        loading: action.payload\n      }\n\n    case ADD_PRODUCT_OK:\n      return {\n        ...state,\n        loading: false,\n        products: [...state.products, action.payload]\n      }\n\n    case ADD_PRODUCT_ERROR:\n    case PRODUCTS_DOWNLOAD_ERROR:\n    case PRODUCT_DELETED_ERROR:\n    case PRODUCT_EDITED_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n\n    case PRODUCTS_DOWNLOAD_OK:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        products: action.payload\n      }\n    case RETRIEVE_PRODUCT_DELETE:\n      return {\n        ...state,\n        deleteProduct: action.payload\n      }\n    case PRODUCT_DELETED_OK:\n      return {\n        ...state,\n        products: state.products.filter(product => product.id !== state.deleteProduct),\n        deleteProduct: null\n      }\n\n    case RETRIEVE_PRODUCT_EDIT:\n      return {\n        ...state,\n        editProduct: action.payload\n      }\n\n    case PRODUCT_EDITED_OK:\n      return {\n        ...state,\n        editProduct: null,\n        products: state.products.map(product =>\n          product.id === action.payload.id ? product = action.payload : product\n        )\n      }\n\n    default:\n      return state\n  }\n}","import {\n  SHOW_ALERT,\n  HIDE_ALERT\n} from '../types'\n\n// every reducer has it own state\nconst initialState = {\n  alert: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SHOW_ALERT:\n      return {\n        ...state,\n        alert: action.payload\n      }\n\n    case HIDE_ALERT:\n      return {\n        ...state,\n        alert: null\n      }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport productsReducer from './products-reducer'\nimport alertReducer from './alert-reducer'\n\nexport default combineReducers({\n  products: productsReducer,\n  alert: alertReducer\n})\n\n// If we are going to have several reducers, we must use combine them because there can only be one\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\n\nconst store = createStore(\n  reducer,\n  compose(applyMiddleware(thunk),\n    typeof window === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  )\n)\n\nexport default store\n","import React from 'react'\nimport Header from './components/Header'\nimport Products from './components/Products'\nimport NewProduct from './components/NewProduct'\nimport EditProduct from './components/EditProduct'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n// Redux\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={ store }>\n        <Header />\n        <div>\n          <Switch>\n            <Route exact path='/' component={Products} />\n            <Route exact path='/products/new' component={NewProduct} />\n            <Route exact path='/products/edit/:id' component={EditProduct} />\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}